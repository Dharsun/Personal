ACCESS Control 

Forced Browsing from robots.txt
Forced Browsing from login page source (IF admin funtionality)
Parameter tampering from false to true 
Parameter tampering via json request 
URL-based access control | Bypass using X-Original-URL: /admin/deleteUser
Method Based access control | Change POST to GET | vise-versa
Changing user identification parameters ex: id,user,record etc...
If parameter is unpreditable try to find in other way 
Changing cookies for bybassing roll based features 
Refer header access control | bypass this using adding valid refer header

Location-based access control

Some web sites enforce access controls over resources based on the user's geographical location. This can apply, for example, to banking applications or media services where state legislation or business restrictions apply. These access controls can often be circumvented by the use of web proxies, VPNs, or manipulation of client-side geolocation mechanisms. 

How to prevent access control vulnerabilities

Access control vulnerabilities can generally be prevented by taking a defense-in-depth approach and applying the following principles:

    Never rely on obfuscation alone for access control.
    Unless a resource is intended to be publicly accessible, deny access by default.
    Wherever possible, use a single application-wide mechanism for enforcing access controls.
    At the code level, make it mandatory for developers to declare the access that is allowed for each resource, and deny access by default.
    Thoroughly audit and test access controls to ensure they are working as designed.

